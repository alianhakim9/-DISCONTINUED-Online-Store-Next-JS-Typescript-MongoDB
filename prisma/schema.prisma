// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Account {
  id                 String  @id @default(cuid()) @map("_id")
  userId             String
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?
  access_token       String?
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?
  session_state      String?
  oauth_token_secret String?
  oauth_token        String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid()) @map("_id")
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid()) @map("_id")
  name          String?
  username      String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  password      String?
  isAdmin       Boolean?
  Account       Account[]
  Session       Session[]
  Cart          Cart[]
}

model Product {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  description String?
  price       Float
  images      String[]
  stock       Int
  category    Category @relation(fields: [categoryId], references: [id])
  categoryId  String   @db.ObjectId
  createdAt   DateTime @default(now())
  Cart        Cart[]
}

model Cart {
  id            String   @id @default(auto()) @map("_id") @db.ObjectId
  quantity      Int
  totalPrice    Int
  itemPrice     Int
  shippingPrice Int
  product       Product  @relation(fields: [productId], references: [id])
  productId     String   @db.ObjectId
  User          User?    @relation(fields: [userId], references: [id])
  userId        String?
  createdAt     DateTime @default(now())
}

model Category {
  id        String    @id @default(auto()) @map("_id") @db.ObjectId
  name      String    @unique
  createdAt DateTime  @default(now())
  Product   Product[]
}
